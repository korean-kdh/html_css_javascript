자바스크립트는 아주 유명한 프로그래밍 언어이며 웹페이지를 만들기 위해 사용됩니다.
프로그래밍 언어는 컴퓨터 시스템에서 소프트웨어를 작성하기 위한 형식적인 언어
로, 논리적인 연산 과정이 핵심입니다. 웹페이지는 콘텐츠를 브라우저에 표현하고 사용자와의 
상호작용을 위해 만들어진 것으로, 자바스크립트와 함께 HTML, CSS 등으로 구현됩니다.
웹페이지를 만드는 것을 웹 개발 또는 웹 코딩이라 하며, 자바스크립트는 일반적인 프로그래밍과
웹 코딩의 특징을 모두 갖고 있습니다. 또한 자바나 C++ 등의 프로그래밍 언어와 달리 컴파일(compile)
과정 없이 프로그램 작성 죽시 브라우저에 결과를 시각적으로 표현할 수 있어 매우 흥미로우며,
프로그래밍 감각과 논리적인 사고도 함께 키울 수 있습니다. 무엇보다 배우기 쉽다는 점에 
현재 인가가 높은 이유일 것입니다.

1. 자바스크립트의 주요 특징
1) 웹 개발을 위한 프로그래밍 언어
2) 스크립트 언어(script language)
3) 이벤트 드리븐 방식(event-driven)
4) 자바스크립트 표준, ECMAScript

1) 웹 개발을 위한 프로그래밍 언어
앞서 이야기했듯이 자바스크립트는 소프트웨어를 작성하기 위한 프로그래밍 언어와
웹페이지 개발을 위한 특화된 언어가 공존하는 형태이며 HTML, CSS와 함께 웹 표준

2) 스크립트 언어
프로그램이 실행되기 위해서는 컴퓨터가 이해할 수 있는 기계어(machine code)로 변환되어야 하는데,
미리 기계어로 변환하는 컴파일(compiled) 방식과 실행 시에 변환하는 인터프리트(interpreted) 방식이 있습니다.
컴파일을 번역으로, 인터프리트를 통역으로 비유할 수 있습니다. 브라우저에 탑재된 자바스크립트 해석기(처리기)를 인터프리터(interpreter)
라 하며, 인터프리터를 통해 컴퓨터가 이해하는 기계어로 프로그램 실행 시에 통역됩니다. 자바스크립트 소스(source)를 사전에 변환하지
않고 그대로 사용할 수 있어 편리하여 초보자가 익히기도 쉽습니다. 컴파일 과정을 거치지 않는 프로그래밍 언어를 스크립트 언어
(script language)라고 하며, 대표적으로 자바스크립트와 파이썬이 있습니다.

컴파일러 언어
소스코드 -> 컴파일러 -> 기계어 출력 -> 출력

인터프리터 언어
소스코드 -> 인터프리터 -> 출력

3) 이벤트 드리븐 방식
이벤트에 반응하여 동작을 변경하거나 수행하는 방식을 이벤트 드리븐(event-driven)
이라고 합니다. 이벤트는 트리거(trigger)와 처리기(handler/listener)로 구성되는데,
트리거는 총의 방아쇠를 의미하는 것으로, 육상경기에서 심판이 총을 쏘면 출발이 시작되듯,
웹은 마우스나 키보드를 클릭하거나 특정 시점이 되면 이에 반응하여 처리기에 
미리 정의된 동작을 수행하는 방식으로 구성됩니다.

4) 자바스크립트 표준, ECMAScript
자바스크립트 표준의 정식 명칭은 'ECMAScript'로, ECMA International이 ECMA-262라는
기술 규격에 따라 정의하고 있는 표준화된 스크립트 프로그래밍 언어입니다.
이전에 출간된 대부분의 자바스크립트 관련 도서는 'ES3'를 기준으로 설명하였으나,
기능이나 쓰임이 대폭 보강된 ES6가 정의됨에 따라 자바스크립트의 활용에 주목하고 
있습니다. ES는 ECMAScript의 약자이고, 뒤의 숫자는 버전을 의미합니다. 
ES6 이후 버전도 계속 업데이트되고 있지만, 현재 ES6가 가장 널리 쓰이고 있습니다.

V8 자바스크립트 엔진 기반의 자바스크립트 실행 환경(runtime environment)인 Node.js가 소개되면서
자바스크립트는 웹브라우저에서만 동작하는 클라이언트용 스크립트 언어를 넘어 서버(server-side)에서도 사용할 수 있는
언어로 급성장하게 되었습니다. 최근 리엑트(React), 앵귤러(Angular), 뷰(Vue) 등 Node.js 기반 애플리케이션
라이브러리 프레임워크로 그 열기는 한층 더 뜨거워지고 있습니다.

